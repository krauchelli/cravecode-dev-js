// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid()) @unique
  username    String    @unique
  email       String    @unique
  phoneNumber String?
  password    String
  role        UserRole  @default(USER)
  carts       Cart[]
  ordered     Ordered[]
}

enum UserRole {
  ADMIN
  USER
}

enum OrderStatus {
  CART
  PROCESSED
  COMPLETED
}

model Cart {
  id        String @id @default(uuid()) @unique
  userId    String
  payMethodId String
  total     Float @default(0)
  status    OrderStatus @default(CART)
  createdAt DateTime @default(now())
  user      User @relation(fields: [userId], references: [id])
  payMethod PayMethod @relation(fields: [payMethodId], references: [id])
  items     CartItem[]
}

model CartItem {
  id        String @id @default(uuid()) @unique
  cartId    String
  productId String
  quantity  Int
  createdAt DateTime @default(now())
  cart      Cart @relation(fields: [cartId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Ordered {
  id        String @id @default(uuid()) @unique
  userId    String
  payMethodId String
  total     Float @default(0)
  status    OrderStatus @default(CART)
  createdAt DateTime @default(now())
  user      User @relation(fields: [userId], references: [id])
  payMethod PayMethod @relation(fields: [payMethodId], references: [id])
  items     OrderedItem[]  
}

model OrderedItem {
  id        String @id @default(uuid()) @unique
  orderedId String
  productId String
  quantity  Int
  createdAt DateTime @default(now())
  ordered   Ordered @relation(fields: [orderedId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

}

model PayMethod {
  id        String @id @default(uuid()) @unique
  name      String
  carts     Cart[]
  ordereds  Ordered[]
}

model Product {
  id        String @id @default(uuid()) @unique
  name      String
  price     Float
  imagePath String?  
  carts     CartItem[]
  ordereds  OrderedItem[]
}